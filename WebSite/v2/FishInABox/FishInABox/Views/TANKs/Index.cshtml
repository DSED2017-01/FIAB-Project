@model IEnumerable<FishInABox.Models.DataModel.TANK>

@{
    ViewBag.Title = "Index";
}

<h2>Tank Maintenance Menu</h2>
<!-- Create a button for user to return to previous screen -->
<input type="button" class='smallerClickButton'
       value="&laquo; Return to Tank Info Loader Menu" onclick="location.href='@Url.Action("TankInfoLoader", "System")'" />
<p>
    <div class="col-md-2">
        @Html.ActionLink("Create New", "Create")
    </div>
</p>
<table class="table">
    <tr>
        <th>
            <!-- @Html.DisplayNameFor(model => model.ID_CODE)  -->
            Tank ID
        </th>
        <th>
            <!-- @Html.DisplayNameFor(model => model.RFID)  -->
            RFID Code
        </th>
        <th>
            <!--  @Html.DisplayNameFor(model => model.TEXT) -->
            Comment
        </th>

        <th>
            <!-- @Html.DisplayNameFor(model => model.TANK_BAY.ID_CODE)  -->
            
        </th>
        <th></th>
    </tr>
    <!--  https://dzone.com/articles/how-order-multiple-columns  -->
    <!-- Order the Tank by Bay, then by Tank Code -->
@foreach (var item in Model.OrderBy(a => a.BAY_FK).ThenBy(b => b.ID_CODE)) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ID_CODE)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.RFID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TEXT)
        </td>
        <td>
            <!-- @Html.DisplayFor(modelItem => item.TANK_BAY.ID_CODE)  -->
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID_PK }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID_PK }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID_PK })
        </td>
    </tr>
}

</table>
